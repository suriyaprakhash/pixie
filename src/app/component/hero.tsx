'use client'
import React, { useState } from 'react'
import { generatePkce, generatePkceFromString } from '../util/PkceUtil';
import { Slider } from '@mui/material';
import Link from 'next/link';

const Hero = () => {

    const [tokenSize, setTokenSize] = useState<number>(48);

    const [codeVerifier, setCodeVerifier] = useState<string>();
    const [codeChallenge, setCodeChallenge] = useState<string>();

    const [codeVerifierInput, setCodeVerifierInput] = useState<string>('');


    const generate = async (): Promise<void> => {
        const { codeVerifier, codeChallenge } = await generatePkce(tokenSize);
        setCodeVerifier(codeVerifier)
        setCodeChallenge(codeChallenge)
        console.log("Code Verifier:", codeVerifier);
        console.log("Code Challenge:", codeChallenge);
    }

    const generateChallenge = async (): Promise<void> => {
        const { codeVerifier, codeChallenge } = await generatePkceFromString(codeVerifierInput);
        setCodeVerifier(codeVerifier)
        setCodeChallenge(codeChallenge)
        console.log("Code Verifier:", codeVerifier);
        console.log("Code Challenge:", codeChallenge);
    }

    const handleTokenSizeChange = (event: Event, newValue: number | number[]): void => {
        console.log("valueChanged:", newValue as number);
        setTokenSize(newValue as number)
    }

    const textChanged = (event: any) => {
        setCodeVerifierInput(event.target.value);
    }

    return (
        <div className="grid grid-cols-3 items-center h-[750px] sm:h-[76vh] overflow-auto pl-20 pr-20">
            <section className='col-span-3 grid grid-cols-3'>
                <div className='col-span-3 items-center text-center grid sm:grid-cols-3 sm:p-5 sm:gap-20 grid-cols-1'>
                    <label>Random Bytes to Generate Code Verifier</label>
                    <div className='p-5'>
                        <Slider className="text-primary-text" defaultValue={48} max={96} min={32} valueLabelDisplay="on" value={tokenSize} onChange={handleTokenSizeChange} />
                    </div>
                    <button className="border-r-8 border-l-8 bg-button-bg text-button-text p-3 hover:bg-button-bg-hover hover:text-button-text-hover" onClick={generate}>Generate New</button>
                </div>
                <div className='col-span-3 p-2'>
                    <label title="Verifier to be used to generate the code challenge">Code verifier</label>
                    {codeVerifier && <label className="text-secondary-text"> ({codeVerifier?.length} chars)</label>}
                    <textarea className='w-full p-3 text-text-area-text bg-text-area-bg' value={codeVerifier}></textarea>
                </div>
                <div className='col-span-3 p-2'>
                    <label title="Code challenge generated by verfier">Code challenge</label>
                    {codeChallenge && <label className="text-secondary-text">  ({codeChallenge?.length} chars)</label>}
                    <textarea className='w-full  p-3 text-text-area-text bg-text-area-bg' value={codeChallenge}></textarea>
                </div>
            </section>

            <section className='col-span-3 grid sm:grid-cols-6'>
                <div className='sm:col-span-4 p-5 items-center text-center'>
                    <label>Already got a Verifier?</label>
                    <textarea className='w-full p-3 text-text-area-text bg-text-area-bg' value={codeVerifierInput} onChange={textChanged}></textarea>
                    <button className="border-r-8 border-l-8 bg-button-bg text-button-text p-3 hover:bg-button-bg-hover hover:text-button-text-hover" onClick={generateChallenge} >Get Challenge</button>
                </div>
                <div className='sm:col-span-2 p-5 text-center justify-center items-center hidden sm:flex sm:flex-row '>
                    <button className="border-r-8 border-l-8 bg-button-bg text-button-text p-3 hover:bg-button-bg-hover hover:text-button-text-hover">
                        <Link className="" href="/bulk">Generate Bulk</Link></button>
                    <button className="border-r-8 border-l-8 bg-button-bg text-button-text p-3 hover:bg-button-bg-hover hover:text-button-text-hover"><Link className="" href="/json">Show JSON</Link></button>
                </div>
            </section>
        </div>
    )
}

export default Hero